# Generated by Django 5.0.6 on 2024-05-18 00:28

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Img_Usuario', models.ImageField(blank=True, null=True, upload_to='static/img/')),
                ('Tel_Usuario', models.CharField(max_length=14)),
                ('Data_nsc_Usuario', models.DateField(max_length=999, null=True)),
                ('Sexo_Usuario', models.CharField(choices=[('F', 'Feminino'), ('M', 'Masculino')], max_length=10)),
                ('Cpf_Usuario', models.CharField(max_length=11)),
                ('Cep_Usuario', models.CharField(max_length=8)),
                ('Endr_Usuario', models.CharField(max_length=100)),
                ('is_paciente', models.BooleanField()),
                ('is_especialista', models.BooleanField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Especialidade',
            fields=[
                ('nome', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='Nome')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status', models.CharField(choices=[('A', 'Agendada'), ('C', 'Cancelada'), ('E', 'Espera'), ('R', 'Realizada')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Especialista',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('salario', models.CharField(blank=True, max_length=10, null=True, verbose_name='Sal√°rio')),
                ('crm', models.CharField(max_length=20, verbose_name='CRM')),
                ('coren', models.CharField(max_length=20, verbose_name='COREM')),
                ('cro', models.CharField(max_length=20, verbose_name='CRO')),
                ('especialidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medicos', to='core.especialidade')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('core.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('usuario_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('core.usuario',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ocupacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ID_Especialidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.especialidade')),
                ('ID_Especialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.especialista')),
            ],
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Data', models.DateTimeField(max_length=999)),
                ('Laudo', models.CharField(blank=True, max_length=999, null=True)),
                ('Exame', models.CharField(blank=True, max_length=999, null=True)),
                ('Receita', models.CharField(blank=True, max_length=999, null=True)),
                ('Id_Especialidade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.especialidade')),
                ('Id_Status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.status')),
                ('Id_Escpecialista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.especialista')),
                ('Id_Paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.paciente')),
            ],
        ),
    ]
